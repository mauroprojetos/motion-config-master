###
### automation backyard
###

###
# end
###

- id: motion_end_counter_backyard
  alias: motion_end_counter_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_end_backyard
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_end_backyard','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_end_counter_backyard
    - service: counter.increment
      entity_id: counter.motion_end_counter

- id: motion_end_snapshot_backyard
  alias: motion_end_snapshot_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_event_end_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {{ state_attr('camera.motion_event_end_backyard','entity_picture') is not none }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_end-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_end_backyard' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_end.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_end_backyard' }}
#    - delay:
#        milliseconds: 100
#    - service: mqtt.publish
#      data:
#        topic: 'motion-master/backyard/snapshot/end'
#        payload_template: >-
#          {{ '/config/www/images/motion_end-backyard.jpg' }}
#        qos: 1
#        retain: 0

###
# annotated
###

- id: motion_annotated_counter_backyard
  alias: motion_annotated_counter_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_annotated_backyard
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_annotated_backyard','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_annotated_counter_backyard
    - service: counter.increment
      entity_id: counter.motion_annotated_counter

- id: motion_annotated_snapshot_backyard
  alias: motion_annotated_snapshot_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: camera.motion_event_annotated_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {{ state_attr('camera.motion_event_annotated_backyard','entity_picture') is not none }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_annotated-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_backyard' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_annotated.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_backyard' }}
#    - delay:
#        milliseconds: 100
#    - service: mqtt.publish
#      data:
#        topic: 'motion-master/backyard/snapshot/annotated'
#        payload_template: >-
#          {{ '/config/www/images/motion_annotated-backyard.jpg' }}
#        qos: 1
#        retain: 0

###
# detected
###

- id: motion_detected_counter_backyard
  alias: motion_detected_counter_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_detected_backyard
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_detected_backyard','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_detected_counter_backyard
    - service: counter.increment
      entity_id: counter.motion_detected_counter

- id: motion_detected_snapshot_backyard
  alias: motion_detected_snapshot_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_detected_counter_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {{ states('sensor.motion_annotated_count_backyard')|int > 0 }}
      - condition: template
        value_template: >-
          {{ state_attr('camera.motion_event_annotated_backyard','entity_picture') is not none }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_backyard' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_backyard' }}
#    - delay:
#        milliseconds: 100
#    - service: mqtt.publish
#      data:
#        topic: 'motion-master/backyard/snapshot/detected'
#        payload_template: >-
#          {{ '/config/www/images/motion_detected-backyard.jpg' }}
#        qos: 1
#        retain: 0

###
# detected_entity
###

- id: motion_detected_entity_counter_backyard
  alias: motion_detected_entity_counter_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_detected_entity_backyard
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_detected_entity_backyard','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_detected_entity_counter_backyard
    - service: counter.increment
      entity_id: counter.motion_detected_entity_counter

- id: motion_detected_entity_snapshot_backyard
  alias: motion_detected_entity_snapshot_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_detected_entity_counter_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
          {{ is_state('input_boolean.motion_snapshot_save','on') }}
      - condition: template
        value_template: >-
          {{ states('sensor.motion_annotated_entity_count_backyard')|int > 0 }}
      - condition: template
        value_template: >-
          {{ state_attr('camera.motion_detected_entity_backyard','entity_picture') is not none }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected_entity-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_backyard' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected_entity.jpg' }}
        entity_id: >-
          {{ 'camera.motion_event_annotated_backyard' }}
#    - delay:
#        milliseconds: 100
#    - service: mqtt.publish
#      data:
#        topic: 'motion-master/backyard/snapshot/detected_entity'
#        payload_template: >-
#          {{ '/config/www/images/motion_detected_entity-backyard.jpg' }}
#        qos: 1
#        retain: 0

###
# complete
###

- id: motion_complete_counter_backyard
  alias: motion_complete_counter_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.motion_complete_backyard
  condition:
    - condition: template
      value_template: >-
        {{ is_state('binary_sensor.motion_complete_backyard','on') }}
  action:
    - service: counter.increment
      entity_id: counter.motion_complete_counter_backyard
    - service: counter.increment
      entity_id: counter.motion_complete_counter

###
# found
###

- id: motion_tracker_found_backyard
  alias: motion_tracker_found_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_found_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_found','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'motion/tracker/webcam/backyard'
        retain: true
        payload_template: >-
          { "topic":"motion/tracker/webcam/backyard", "payload":"home", "date":{{ (now().timestamp()|int) }} }

- id: motion_reset_found_backyard
  alias: motion_reset_found_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_found_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_reset_found_webcam','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_end-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_annotated-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected_entity-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_testsignal' }}

###
# lost
###

- id: motion_tracker_lost_backyard
  alias: motion_tracker_lost_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_lost_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_tracker_lost','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'motion/tracker/webcam/backyard'
        retain: true
        payload_template: >-
          { "topic":"motion/tracker/webcam/backyard", "payload":"not_home", "date":{{ (now().timestamp()|int) }} }

- id: motion_reset_lost_backyard
  alias: motion_reset_lost_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_lost_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_reset_lost_webcam','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_end-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_annotated-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}
    - service: camera.snapshot
      data_template:
        filename: >-
          {{ '/config/www/images/motion_detected_entity-backyard.jpg' }}
        entity_id: >-
          {{ 'camera.motion_nosignal' }}

###
# notify lost and found
###

## found
- id: motion_status_camera_notify_found_backyard
  alias: motion_status_camera_notify_found_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_found_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state|lower != 'none' and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Camera backyard found
        notification_id: >
          backyard
        message: >-
          Camera backyard was {{ trigger.from_state.state }};
          found at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}

## lost
- id: motion_status_camera_notify_lost_backyard
  alias: motion_status_camera_notify_lost_backyard
  initial_state: on
  trigger:
    platform: state
    entity_id: sensor.motion_status_camera_lost_backyard
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_status_camera_notify','on') }}
      - condition: template
        value_template: >
          {{ trigger.to_state.state != trigger.from_state.state and trigger.to_state|lower != 'none' and trigger.to_state.state|lower != 'unknown' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Camera backyard lost
        notification_id: >
          backyard
        message: >-
          Camera backyard was {{ trigger.from_state.state }};
          lost at {{ now().timestamp()|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}

###
# notify detected
###

- id: motion_detected_notify_backyard
  alias: motion_detected_notify_backyard
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.motion_detected_counter_backyard
  condition:
    condition: template
    value_template: >
      {{ is_state('input_boolean.motion_detected_notify','on') and is_state('binary_sensor.motion_detected_backyard','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states.sensor.motion_annotated_count_backyard.state }} {{ states.sensor.motion_detect_entity.state }}(s)
          from {{ states.sensor.motion_event_annotated_backyard.attributes.event.camera }}
        notification_id: >
          detected-{{- states.sensor.motion_event_annotated_backyard.attributes.event.camera -}}
        message: >-
          Detected {{ states.sensor.motion_annotated_count_backyard.state }} {{ states.sensor.motion_detect_entity.state }}(s)
          from {{ states.sensor.motion_event_annotated_backyard.attributes.event.camera }}
          for {{ states.sensor.motion_event_annotated_backyard.attributes.event.elapsed }} seconds
          ({{ states.sensor.motion_event_annotated_backyard.attributes.event.images|length }} frames)
          at {{ states.sensor.motion_event_annotated_backyard.attributes.event.start|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}


###
# notify detected_entity
###

- id: motion_detected_entity_notify_backyard
  alias: motion_detected_entity_notify_backyard
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.motion_detected_entity_counter_backyard
  condition:
    condition: template
    value_template: >
      {{ is_state('input_boolean.motion_detected_entity_notify','on') and is_state('binary_sensor.motion_detected_entity_backyard','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >-
          Detected {{ states.sensor.motion_annotated_count_backyard.state }} {{ states.sensor.motion_detect_entity.state }}(s)
          from {{ states.sensor.motion_event_annotated_backyard.attributes.event.camera }}
        notification_id: >
          detected_entity-{{- states.sensor.motion_event_annotated_backyard.attributes.event.camera -}}
        message: >-
          Detected {{ states.sensor.motion_annotated_count_backyard.state }} {{ states.sensor.motion_detect_entity.state }}(s)
          from {{ states.sensor.motion_event_annotated_backyard.attributes.event.camera }}
          for {{ states.sensor.motion_event_annotated_backyard.attributes.event.elapsed }} seconds
          ({{ states.sensor.motion_event_annotated_backyard.attributes.event.images|length }} frames)
          at {{ states.sensor.motion_event_annotated_backyard.attributes.event.start|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}

